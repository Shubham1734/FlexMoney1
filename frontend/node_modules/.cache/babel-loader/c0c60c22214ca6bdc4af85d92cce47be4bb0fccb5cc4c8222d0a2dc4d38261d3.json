{"ast":null,"code":"var _jsxFileName = \"E:\\\\FlexMoney\\\\frontend\\\\src\\\\components\\\\UserForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserForm = () => {\n  _s();\n  //states\n  const [formData, setFormData] = useState({\n    name: '',\n    age: '',\n    selectedBatch: ''\n  });\n  const [validationResult, setValidationResult] = useState({\n    isValid: true,\n    errors: {}\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  //funtions\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Perform validation before submitting the form data\n    if (validateFormData()) {\n      // Call the function to submit the form data\n      try {\n        const response = await fetch('http://localhost:3001/api/submitUser', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        });\n        if (response.ok) {\n          console.log('Form data submitted successfully');\n          // Reset the form after successful submission\n          setFormData({\n            name: '',\n            age: '',\n            selectedBatch: ''\n          });\n        } else {\n          console.error('Failed to submit form data');\n          alert('Failed to submit form data. Please try again.');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        alert('An error occurred. Please try again.');\n      }\n    }\n  };\n  const validateFormData = () => {\n    // Perform basic validations here\n    let isValid = true;\n    const errors = {};\n\n    // Example: Check if the name is not empty\n    if (formData.name.trim() === '') {\n      errors.name = 'Please enter your name';\n      isValid = false;\n    }\n\n    // Example: Check if the age is a positive integer\n    const ageValue = parseInt(formData.age, 10);\n    if (isNaN(ageValue) || ageValue <= 0) {\n      errors.age = 'Please enter a valid age';\n      isValid = false;\n    }\n\n    // Add more validation rules as needed\n\n    return {\n      isValid,\n      errors\n    };\n  };\n  const submitFormData = () => {\n    // Call the API or perform further actions to submit the form data\n    console.log('Form data submitted:', formData);\n    // Reset the form after submission\n    setFormData({\n      name: '',\n      age: '',\n      selectedBatch: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Age:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"age\",\n        value: formData.age,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Batch:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"selectedBatch\",\n        value: formData.selectedBatch,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Batch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"6-7AM\",\n          children: \"6-7AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"7-8AM\",\n          children: \"7-8AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"8-9AM\",\n          children: \"8-9AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"5-6PM\",\n          children: \"5-6PM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(UserForm, \"svbxIxz9NQTkUdx5y4fFyMgdyG0=\");\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UserForm","_s","formData","setFormData","name","age","selectedBatch","validationResult","setValidationResult","isValid","errors","handleChange","e","target","value","handleSubmit","preventDefault","validateFormData","response","fetch","method","headers","body","JSON","stringify","ok","console","log","error","alert","trim","ageValue","parseInt","isNaN","submitFormData","onSubmit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/FlexMoney/frontend/src/components/UserForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst UserForm = () => {\r\n\r\n        //states\r\n        const [formData, setFormData] = useState({\r\n            name: '',\r\n            age: '',\r\n            selectedBatch: '',\r\n        });\r\n        \r\n        const [validationResult, setValidationResult] = useState({\r\n            isValid: true,\r\n            errors: {},\r\n        });\r\n        \r\n        const handleChange = (e) => {\r\n            setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value,\r\n            });\r\n        };\r\n//funtions\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault();\r\n    // Perform validation before submitting the form data\r\n    if (validateFormData()) {\r\n      // Call the function to submit the form data\r\n      try {\r\n        const response = await fetch('http://localhost:3001/api/submitUser', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(formData),\r\n        });\r\n\r\n        if (response.ok) {\r\n          console.log('Form data submitted successfully');\r\n          // Reset the form after successful submission\r\n          setFormData({\r\n            name: '',\r\n            age: '',\r\n            selectedBatch: '',\r\n          });\r\n        } else {\r\n          console.error('Failed to submit form data');\r\n          alert('Failed to submit form data. Please try again.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        alert('An error occurred. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const validateFormData = () => {\r\n   // Perform basic validations here\r\n    let isValid = true;\r\n    const errors = {};\r\n\r\n    // Example: Check if the name is not empty\r\n    if (formData.name.trim() === '') {\r\n        errors.name = 'Please enter your name';\r\n        isValid = false;\r\n    }\r\n\r\n    // Example: Check if the age is a positive integer\r\n    const ageValue = parseInt(formData.age, 10);\r\n    if (isNaN(ageValue) || ageValue <= 0) {\r\n        errors.age = 'Please enter a valid age';\r\n        isValid = false;\r\n    }\r\n\r\n    // Add more validation rules as needed\r\n\r\n    return {\r\n        isValid,\r\n        errors,\r\n    };\r\n  };\r\n\r\n  const submitFormData = () => {\r\n    // Call the API or perform further actions to submit the form data\r\n    console.log('Form data submitted:', formData);\r\n    // Reset the form after submission\r\n    setFormData({\r\n      name: '',\r\n      age: '',\r\n      selectedBatch: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Name:\r\n        <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Age:\r\n        <input type=\"number\" name=\"age\" value={formData.age} onChange={handleChange} />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Select Batch:\r\n        <select name=\"selectedBatch\" value={formData.selectedBatch} onChange={handleChange}>\r\n          <option value=\"\">Select Batch</option>\r\n          <option value=\"6-7AM\">6-7AM</option>\r\n          <option value=\"7-8AM\">7-8AM</option>\r\n          <option value=\"8-9AM\">8-9AM</option>\r\n          <option value=\"5-6PM\">5-6PM</option>\r\n        </select>\r\n      </label>\r\n      <br />\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}